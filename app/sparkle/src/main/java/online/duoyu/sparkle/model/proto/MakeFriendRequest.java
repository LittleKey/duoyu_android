// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: models/proto/business/user.proto at 78:1
package online.duoyu.sparkle.model.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;

import java.io.IOException;

import okio.ByteString;

public final class MakeFriendRequest extends Message<MakeFriendRequest, MakeFriendRequest.Builder> {
  public static final ProtoAdapter<MakeFriendRequest> ADAPTER = new ProtoAdapter_MakeFriendRequest();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_NUMBER = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32")
  public final Integer number;

  public MakeFriendRequest(Integer number) {
    this(number, ByteString.EMPTY);
  }

  public MakeFriendRequest(Integer number, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.number = number;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.number = number;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MakeFriendRequest)) return false;
    MakeFriendRequest o = (MakeFriendRequest) other;
    return unknownFields().equals(o.unknownFields()) && Internal.equals(number, o.number);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (number != null ? number.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (number != null) builder.append(", number=").append(number);
    return builder.replace(0, 2, "MakeFriendRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<MakeFriendRequest, Builder> {
    public Integer number;

    public Builder() {
    }

    public Builder number(Integer number) {
      this.number = number;
      return this;
    }

    @Override
    public MakeFriendRequest build() {
      return new MakeFriendRequest(number, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_MakeFriendRequest extends ProtoAdapter<MakeFriendRequest> {
    ProtoAdapter_MakeFriendRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, MakeFriendRequest.class);
    }

    @Override
    public int encodedSize(MakeFriendRequest value) {
      return (value.number != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.number) : 0) + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, MakeFriendRequest value) throws IOException {
      if (value.number != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.number);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public MakeFriendRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1; ) {
        switch (tag) {
          case 1:
            builder.number(ProtoAdapter.INT32.decode(reader));
            break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public MakeFriendRequest redact(MakeFriendRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
