// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: models/proto/common.proto at 22:1
package online.duoyu.sparkle.model.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Action extends Message<Action, Action.Builder> {
  public static final ProtoAdapter<Action> ADAPTER = new ProtoAdapter_Action();

  private static final long serialVersionUID = 0L;

  public static final Type DEFAULT_TYPE = Type.UNKNOWN;

  public static final String DEFAULT_CLAZZ = "";

  public static final String DEFAULT_URL = "";

  @WireField(
      tag = 1,
      adapter = "online.duoyu.sparkle.model.proto.Action$Type#ADAPTER"
  )
  public final Type type;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String clazz;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  public Action(Type type, String clazz, String url) {
    this(type, clazz, url, ByteString.EMPTY);
  }

  public Action(Type type, String clazz, String url, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.type = type;
    this.clazz = clazz;
    this.url = url;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.type = type;
    builder.clazz = clazz;
    builder.url = url;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Action)) return false;
    Action o = (Action) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(type, o.type)
        && Internal.equals(clazz, o.clazz)
        && Internal.equals(url, o.url);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (clazz != null ? clazz.hashCode() : 0);
      result = result * 37 + (url != null ? url.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (type != null) builder.append(", type=").append(type);
    if (clazz != null) builder.append(", clazz=").append(clazz);
    if (url != null) builder.append(", url=").append(url);
    return builder.replace(0, 2, "Action{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Action, Builder> {
    public Type type;

    public String clazz;

    public String url;

    public Builder() {
    }

    public Builder type(Type type) {
      this.type = type;
      return this;
    }

    public Builder clazz(String clazz) {
      this.clazz = clazz;
      return this;
    }

    public Builder url(String url) {
      this.url = url;
      return this;
    }

    @Override
    public Action build() {
      return new Action(type, clazz, url, super.buildUnknownFields());
    }
  }

  public enum Type implements WireEnum {
    UNKNOWN(0),

    JUMP(1),

    JUMP_WITH_LOGIN(2),

    EVENT(3),

    LOGOUT(4),

    LIKED(5),

    UPDATE_MONTH(6),

    FOLLOW(7),

    ATTENTION(8),

    COMMENT(9);

    public static final ProtoAdapter<Type> ADAPTER = ProtoAdapter.newEnumAdapter(Type.class);

    private final int value;

    Type(int value) {
      this.value = value;
    }

    /**
     * Return the constant for {@code value} or null.
     */
    public static Type fromValue(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return JUMP;
        case 2: return JUMP_WITH_LOGIN;
        case 3: return EVENT;
        case 4: return LOGOUT;
        case 5: return LIKED;
        case 6: return UPDATE_MONTH;
        case 7: return FOLLOW;
        case 8: return ATTENTION;
        case 9: return COMMENT;
        default: return null;
      }
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  private static final class ProtoAdapter_Action extends ProtoAdapter<Action> {
    ProtoAdapter_Action() {
      super(FieldEncoding.LENGTH_DELIMITED, Action.class);
    }

    @Override
    public int encodedSize(Action value) {
      return (value.type != null ? Type.ADAPTER.encodedSizeWithTag(1, value.type) : 0)
          + (value.clazz != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.clazz) : 0)
          + (value.url != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.url) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Action value) throws IOException {
      if (value.type != null) Type.ADAPTER.encodeWithTag(writer, 1, value.type);
      if (value.clazz != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.clazz);
      if (value.url != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.url);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Action decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.type(Type.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 2: builder.clazz(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.url(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Action redact(Action value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
